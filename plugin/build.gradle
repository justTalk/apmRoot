/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details take a look at the Writing Custom Plugins chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.7.1/userguide/custom_plugins.html
 */

plugins {
    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
    id 'java-gradle-plugin'
    id 'maven-publish'
}
dependencies {
    implementation 'com.android.tools.build:gradle:3.1.4'
    implementation 'com.android.tools.build:gradle-api:3.1.4'
    implementation 'commons-io:commons-io:2.6'
    implementation 'commons-codec:commons-codec:1.10'
    //noinspection GradleDependency
    implementation 'org.ow2.asm:asm:6.2.1'
    //noinspection GradleDependency
    implementation 'org.ow2.asm:asm-util:6.2.1'
    //noinspection GradleDependency
    implementation 'org.ow2.asm:asm-commons:6.2.1'
    implementation 'com.quinn.hunter:hunter-transform:0.9.0'
}

repositories {
    google()
    jcenter()
    mavenCentral()
}

gradlePlugin {
    // Define the plugin
    plugins {
        greeting {
            //apply时的id
            id = 'com.vcut.tool.apm.greeting'
            implementationClass = 'com.vcut.tool.apm.ApmPluginPlugin'
        }
    }
}

// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
tasks.register('functionalTest', Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

tasks.named('check') {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}

publishing {
    publications {
        // 这里的 hello 可以任意命名
        apmtool(MavenPublication) {
            //classpath对应的路径
            groupId = 'com.vcut.tool.apm'
            artifactId = 'apmtool'
            version = '0.0.2'
            // 组件类型，我们的插件其实就是Java组件
            from components.java
        }
    }

    repositories {
        maven {
            // $rootDir 表示你项目的根目录
            url = "$rootDir/repo"
        }
    }
}